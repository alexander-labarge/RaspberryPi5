#!/bin/bash

# Function to parse and format the tcpdump output
parse_tcpdump_log() {
    local input_log="$1"
    local output_log="$2"

    awk '
    BEGIN {
        print "Timestamp          Source IP           Source Port     Destination IP      Destination Port   Protocol    Domain/Info"
        print "-------------------------------------------------------------------------------------------------------------"
    }
    /IP/ {
        timestamp = $1 " " $2
        protocol = "Unknown"
        
        # Check protocol
        if ($7 == "IP") {
            protocol = "IP"
        } else if ($7 == "UDP") {
            protocol = "UDP"
        } else if ($7 == "TCP") {
            protocol = "TCP"
        }
        
        src_ip_port = $3
        dst_ip_port = $5

        # Remove trailing colon from src_ip_port and dst_ip_port
        sub(/:$/, "", src_ip_port)
        sub(/:$/, "", dst_ip_port)

        # Split src_ip_port and dst_ip_port
        split(src_ip_port, src, ".")
        split(dst_ip_port, dst, ".")
        
        # Extract the domain info
        domain_info = substr($0, index($0,$6))

        # Get source IP and port
        src_ip = src[1]"."src[2]"."src[3]"."src[4]
        src_port = src[5]

        # Get destination IP and port
        dst_ip = dst[1]"."dst[2]"."dst[3]"."dst[4]
        dst_port = dst[5]

        # Trim any trailing colons or commas from ports
        sub(/[^0-9]$/, "", src_port)
        sub(/[^0-9]$/, "", dst_port)

        printf "%-20s %-18s %-15s %-18s %-19s %-10s %s\n", timestamp, src_ip, src_port, dst_ip, dst_port, protocol, domain_info
    }' "$input_log" > "$output_log"
}

# Path to the log file generated by tcpdump
input_log="/var/log/network-logs/network_traffic.log"

# Path to the formatted output log file
output_log="/var/log/network-logs/parsed_network_traffic.log"

# Parse and format the log
parse_tcpdump_log "$input_log" "$output_log"

# Output the formatted log file for review
cat "$output_log"
